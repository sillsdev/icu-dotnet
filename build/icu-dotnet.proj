<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<PropertyGroup>
		<IsOnWindows Condition="'$(OS)'=='Windows_NT'">true</IsOnWindows>
		<IsOnTeamCity Condition="'$(teamcity_version)' != ''">true</IsOnTeamCity>

		<RootDir Condition="'$(IsOnTeamCity)'!='true' Or '$(IsOnWindows)'!='true'">$(MSBuildProjectDirectory)\..</RootDir>
		<RootDir Condition="'$(IsOnTeamCity)'=='true' And '$(IsOnWindows)'=='true'">$(teamcity_build_checkoutDir)</RootDir>
		<teamcity_agent_home_dir Condition="'$(teamcity_agent_home_dir)'=='' And '$(IsOnWindows)'!='true'">/var/lib/TeamCity/agent</teamcity_agent_home_dir>
		<Solution>icu.net.sln</Solution>
		<SolutionDir>$(RootDir)</SolutionDir>
		<SolutionPath>$(SolutionDir)/$(Solution)</SolutionPath>
		<OutputDir>$(RootDir)/output</OutputDir>
		<excludedCategories>ICU50 Deprecated;ByHand;</excludedCategories>
		<excludedCategories Condition="'$(IsOnWindows)'!='true'">$(excludedCategories)KnownMonoIssue;</excludedCategories>
		<Configuration Condition="'$(Configuration)'==''">Release</Configuration>
		<DotNetCLI Condition="'$(DotNetCLI)' == ''">dotnet</DotNetCLI>

		<NuGetPackageDir Condition="'$(OS)'=='Windows_NT'">$(UserProfile)/.nuget/packages</NuGetPackageDir>
		<NuGetPackageDir Condition="'$(OS)'!='Windows_NT'">$(Home)/.nuget/packages</NuGetPackageDir>

		<RestartBuild Condition="!Exists('$(MSBuildProjectDirectory)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll')">true</RestartBuild>
		<RestartBuild Condition="Exists('$(MSBuildProjectDirectory)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll')">false</RestartBuild>
	</PropertyGroup>

	<!-- NOTE: this project uses GitVersion (http://gitversion.readthedocs.io) to set the version number. -->
	<!-- To increment the version number create and push a new tag in git -->

	<UsingTask TaskName="NUnitTeamCity"
		AssemblyFile="$(teamcity_dotnet_nunitlauncher_msbuild_task)"
		Condition=" '$(IsOnTeamCity)'=='true' And '$(IsOnWindows)'=='true'"/>
	<UsingTask TaskName="NUnitTeamCity"
		AssemblyFile="$(teamcity_agent_home_dir)/plugins/dotnetPlugin/bin/JetBrains.BuildServer.MSBuildLoggers.dll"
		Condition=" '$(IsOnTeamCity)'=='true' And '$(IsOnWindows)'!='true'"/>
	<UsingTask TaskName="SIL.BuildTasks.UnitTestTasks.NUnit3"
		AssemblyFile="$(MSBuildProjectDirectory)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll"
		Condition="Exists('$(MSBuildProjectDirectory)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll')" />

	<Import Project="NuGet.targets"/>

	<Target Name="RestoreBuildTasks" DependsOnTargets="CheckPrerequisites">
		<Message Text="RestartBuild=$(RestartBuild)"/>
		<Message Text="MSBuildProjectDirectory=$(MSBuildProjectDirectory)"/>
		<Exec Command='$(NuGetCommand) install SIL.BuildTasks -excludeVersion -version 2.5.0 -source "$(PackageSources)" -solutionDirectory "$(MSBuildProjectDirectory)/."' />
	</Target>

	<Target Name="Build">
		<CallTarget Targets="RestoreBuildTasks"/>
		<CallTarget Targets="BuildInternal" Condition="!$(RestartBuild)" />
		<MSBuild Projects="$(MSBuildProjectFullPath)" Targets="BuildInternal" Properties="Configuration=$(Configuration);DotNetCLI=$(DotNetCLI);teamcity_version=$(teamcity_version);teamcity_agent_home_dir=$(teamcity_agent_home_dir)" Condition="$(RestartBuild)" />
	</Target>

	<Target Name="BuildInternal">
		<CallTarget Targets="Clean"/>
		<CallTarget Targets="Compile"/>
		<Message Text="Build Complete"/>
	</Target>

	<Target Name="Compile" DependsOnTargets="RestorePackages">
		<MSBuild Projects="$(SolutionPath)"
			Targets="Rebuild"
			Properties="Configuration=$(Configuration)" />
	</Target>

	<Target Name="Clean">
		<ItemGroup>
			<ExistingObjectFiles
				Include="$(OutputDir)/$(Configuration)/**/*;$(RootDir)/**/obj/**/*;$(RootDir)/**/bin/**/*;$(RootDir)/**/test-results/**/*"
				Exclude="$(RootDir)/.hg/**/*;$(RootDir)/.git/**/*" />
		</ItemGroup>

		<Delete Files="@(ExistingObjectFiles)" />
	</Target>

	<Target Name="Test" DependsOnTargets="Build">
		<CallTarget Targets="TestOnly"/>
	</Target>

	<Target Name="TestOnly" DependsOnTargets="RunNUnitTC;RunNUnit;RunNUnitNetCore"/>

	<Target Name="RunNUnitTC" Condition="'$(IsOnTeamCity)'=='true'">
		<ItemGroup>
			<TestAssemblies Include="$(OutputDir)/$(Configuration)/net461/*tests.dll"/>
		</ItemGroup>

		<NUnitTeamCity
			Assemblies="@(TestAssemblies)"
			ExcludeCategory="$(excludedCategories)SkipOnTeamCity;$(ExtraExcludeCategories)"
			 NUnitVersion="NUnit-3" />
	</Target>

	<Target Name="RunNUnit" Condition="'$(IsOnTeamCity)'!='true'">
		<ItemGroup>
			<TestAssemblies Include="$(OutputDir)/$(Configuration)/net461/*tests.dll"/>
		</ItemGroup>

		<SIL.BuildTasks.UnitTestTasks.NUnit3 Assemblies="@(TestAssemblies)"
			ToolPath="$(NuGetPackageDir)/nunit.consolerunner/3.10.0/tools"
			TestInNewThread="false"
			ExcludeCategory="$(excludedCategories)$(ExtraExcludeCategories)"
			WorkingDirectory="$(RootDir)/output/$(Configuration)/"
			Force32Bit="false"
			Verbose="true"
			UseNUnit3Xml="true"
			FailTaskIfAnyTestsFail="$(FailTaskIfAnyTestsFail)"
			OutputXmlFile="$(OutputDir)/$(Configuration)/TestResults.xml"/>
	</Target>

	<Target Name="RunNUnitNetCore">
		<PropertyGroup>
			<NetCoreTestRunner>$(SolutionDir)/source/icu.net.netstandard.testrunner</NetCoreTestRunner>
			<DotNetCommand Condition="'$(OS)'!='Windows_NT'">DOTNET_SKIP_FIRST_TIME_EXPERIENCE=true $(DotNetCLI)</DotNetCommand>
			<DotNetCommand Condition="'$(OS)'=='Windows_NT'">$(DotNetCLI)</DotNetCommand>
		</PropertyGroup>
		<Exec Command="$(DotNetCommand) run --configuration $(Configuration) --result=$(OutputDir)/$(Configuration)/TestResults.NetCore.xml" WorkingDirectory="$(NetCoreTestRunner)" />
	</Target>

	<Target Name="Restore">
		<MSBuild
			Projects="$(SolutionPath)"
			Targets="Restore"
			Properties="Configuration=$(Configuration)" />
	</Target>

	<Target Name="Pack">
		<MSBuild
			Projects="$(SolutionPath)"
			Targets="Pack"
			Properties="Configuration=$(Configuration)" />
	</Target>

</Project>